FROM {{ namespace }}/{{ image_prefix }}nova-base:{{ tag }}
LABEL maintainer="{{ maintainer }}" name="{{ image_name }}" build-date="{{ build_date }}"

{% block nova_compute_header %}{% endblock %}

{% import "macros.j2" as macros with context %}

{% if install_type == 'binary' %}
    {% if base_package_type == 'rpm' %}

        {% set nova_compute_packages = [
            'ceph-common',
            'device-mapper-multipath',
            'e2fsprogs',
            'genisoimage',
            'iscsi-initiator-utils',
            'nfs-utils',
            'nvme-cli',
            'openstack-nova-compute',
            'openvswitch',
            'parted',
            'sysfsutils',
            'targetcli'
        ] %}

        {% if distro_python_version.startswith('3') %}
        {% set nova_compute_packages = nova_compute_packages + [
            'python3-libguestfs',
            'python3-oslo-vmware',
            'python3-rtslib'
        ] %}
        {% else %}
        {% set nova_compute_packages = nova_compute_packages + [
            'python-libguestfs',
            'python-oslo-vmware',
            'python-rtslib'
        ] %}
        {% endif %}

{{ macros.install_packages(nova_compute_packages | customizable("packages")) }}

    {% elif base_package_type == 'deb' %}

        # ironic as workaround https://bugs.launchpad.net/packstack/+bug/1430388
        {% set nova_compute_packages = [
            'ceph-common',
            'e2fsprogs',
            'genisoimage',
            'ironic-common',
            'multipath-tools',
            'nfs-common',
            'nova-compute',
            'openvswitch-switch',
            'open-iscsi',
            'parted',
            'python-guestfs',
            'python-ironicclient',
            'python-oslo.vmware',
            'python-rtslib-fb',
            'sysfsutils',
            'targetcli-fb'
        ] %}

{{ macros.install_packages(nova_compute_packages | customizable("packages")) }}

RUN rm -f /etc/nova/nova-compute.conf

    {% endif %}
{% elif install_type == 'source' %}
    {% if base_package_type == 'rpm' %}

        {% set nova_compute_packages = [
            'ceph-common',
            'device-mapper-multipath',
            'dosfstools',
            'e2fsprogs',
            'genisoimage',
            'iscsi-initiator-utils',
            'libvirt-python',
            'libosinfo',
            'nfs-utils',
            'openvswitch',
            'parted',
            'python-libguestfs',
            'python-rtslib',
            'qemu-img-ev',
            'sysfsutils',
            'targetcli'
        ] %}

    {% elif base_package_type == 'deb' %}

        {% set nova_compute_packages = [
            'ceph-common',
            'dosfstools',
            'e2fsprogs',
            'genisoimage',
            'libosinfo-bin',
            'multipath-tools',
            'nfs-common',
            'open-iscsi',
            'parted',
            'python-guestfs',
            'python-libvirt',
            'python-rtslib-fb',
            'qemu-utils',
            'targetcli-fb'
        ] %}

        {% if base_arch == "aarch64" %}
            {% set nova_compute_packages = nova_compute_packages + [
                'qemu-efi'
            ] %}
        {% endif %}

RUN mkdir -p /etc/ceph

    {% endif %}

RUN pip install http://10.10.101.3/images/sw_64/configshell_fb-1.1.25-py2-none-any.whl http://10.10.101.3/images/sw_64/pyudev-0.21.0-py2-none-any.whl http://10.10.101.3/images/sw_64/rtslib_fb-2.1.69-py2-none-any.whl http://10.10.101.3/images/sw_64/ethtool-0.14-cp27-cp27mu-linux_sw_64.whl && \
    wget http://10.10.101.3/images/sw_64/targetcli-2.1.fb37-1.ns7.1.noarch.rpm http://10.10.101.3/images/sw_64/qemu-img-ev-2.12.0-18.ns7_6.5.1.sw_64.rpm http://10.10.101.3/images/sw_64/libvirt-python-4.10.0-1.ns7.sw_64.rpm http://10.10.101.3/images/sw_64/libvirt-libs-4.10.0-1.ns7.sw_64.rpm && \
    rpm -ivh --nodeps targetcli-2.1.fb37-1.ns7.1.noarch.rpm && \
    yum install -y qemu-img-ev-2.12.0-18.ns7_6.5.1.sw_64.rpm libvirt-python-4.10.0-1.ns7.sw_64.rpm libvirt-libs-4.10.0-1.ns7.sw_64.rpm && \
    rm ./*.rpm

{{ macros.install_packages(nova_compute_packages | customizable("packages")) }}

{% set nova_compute_pip_packages = [
        'oslo-vmware'
    ]
%}

{% set nova_compute_plugins_pip_packages = [
    '/plugins/*'
] %}

ADD plugins-archive /
RUN {{ macros.install_pip(nova_compute_pip_packages | customizable("pip_packages")) }} \
    && if [ "$(ls /plugins)" ]; then \
           {{ macros.install_pip(nova_compute_plugins_pip_packages) }}; \
       fi

{% endif %}

COPY extend_start.sh /usr/local/bin/kolla_nova_extend_start
RUN chmod 755 /usr/local/bin/kolla_nova_extend_start \
    && rm -f /etc/machine-id

{% block nova_compute_footer %}{% endblock %}
{% block footer %}{% endblock %}

USER nova

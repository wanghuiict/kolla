FROM {{ namespace }}/{{ image_prefix }}base:{{ tag }}
LABEL maintainer="{{ maintainer }}" name="{{ image_name }}" build-date="{{ build_date }}"

{% block kolla_toolbox_header %}{% endblock %}

{% set virtualenv_path='/opt/ansible' %}
{% set os_client_config= virtualenv_path + '/lib/python' + distro_python_version + '/site-packages/os_client_config/defaults.json' %}

{% import "macros.j2" as macros with context %}

{{ macros.configure_user(name='ansible') }}

{% if base_package_type == 'rpm' %}
    {% set kolla_toolbox_packages = [
        'crudini',
        'gcc',
        'gdisk',
        'git',
        'jq',
        'libffi-devel',
        'libxml2-devel',
        'libxslt-devel',
        'make',
        'mariadb',
        'mariadb-devel',
        'openssh-clients',
        'openssl-devel',
        'python-devel'
     ] %}

{% elif base_package_type == 'deb' %}
    {% set kolla_toolbox_packages = [
        'build-essential',
        'ca-certificates',
        'crudini',
        'gdisk',
        'git',
        'jq',
        'libffi-dev',
        'libmariadb-dev-compat',
        'libssl-dev',
        'libxslt1-dev',
        'mariadb-client',
        'python-dev'
     ] %}
{% endif %}
{{ macros.install_packages(kolla_toolbox_packages | customizable("packages")) }}

{% block kolla_toolbox_source_install_python_pip %}
{{ macros.get_pip() }}
{% endblock %}

{% set kolla_toolbox_pip_virtualenv_packages = [
        'virtualenv'
    ] %}

RUN {{ macros.install_pip(kolla_toolbox_pip_virtualenv_packages|customizable("pip_packages"), constraints=false) }} \
    && virtualenv --system-site-packages {{ virtualenv_path }}

ENV PATH {{ virtualenv_path }}/bin:$PATH

{% set kolla_toolbox_pip_packages = [
        'ansible==2.2.0.0',
        '"cmd2<0.9.0"',
        'influxdb',
        'mysqlclient',
        'os-client-config==1.29.0',
        'pbr==4.0.0',
        'pymongo',
        'python-openstackclient==3.14.0',
        'pytz',
        'pyudev',
        'shade==1.27.1'
    ] %}

RUN \
    pip install http://10.10.101.3/images/PyNaCl-1.3.0-cp27-cp27mu-linux_sw_64.whl http://10.10.101.3/images/cryptography-2.7-cp27-cp27mu-linux_sw_64.whl http://10.10.101.3/images/bcrypt-3.1.7-cp27-cp27mu-linux_sw_64.whl http://10.10.101.3/images/Babel-2.3.4-py2.py3-none-any.whl http://10.10.101.3/images/six-1.12.0-py2.py3-none-any.whl \
    && {{ macros.install_pip(kolla_toolbox_pip_packages | customizable("pip_packages"), constraints=false) }} \
    && mkdir -p /etc/ansible /usr/share/ansible \
    && echo 'localhost ansible_connection=local ansible_python_interpreter={{ virtualenv_path }}/bin/python' > /etc/ansible/hosts \
    && sed -i 's|  "identity_api_version": "2.0",|  "identity_api_version": "3",|' {{ os_client_config }}

ENV ANSIBLE_LIBRARY /usr/share/ansible:$ANSIBLE_LIBRARY

COPY find_disks.py kolla_keystone_service.py kolla_keystone_user.py kolla_sanity.py /usr/share/ansible/
COPY ansible.cfg /var/lib/ansible/.ansible.cfg
RUN chmod 644 /usr/share/ansible/find_disks.py \
              /usr/share/ansible/kolla_keystone_service.py \
              /usr/share/ansible/kolla_keystone_user.py \
              /usr/share/ansible/kolla_sanity.py \
              /var/lib/ansible/.ansible.cfg

COPY ansible_sudoers /etc/sudoers.d/kolla_ansible_sudoers
RUN chmod 440 /etc/sudoers.d/kolla_ansible_sudoers \
  && sed -i '/^def _verify_openssl_version/ a \ \ \ \ return' /opt/ansible/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py

{% block kolla_toolbox_footer %}{% endblock %}
{% block footer %}{% endblock %}

USER ansible
